name: Continuous Integration
# requires the "medium" act image
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  # test-docker:
  #   name: Docker Tests
  #   runs-on: ubuntu-latest

  #   # Run a local registry to push to
  #   services:
  #     registry:
  #       image: registry:2
  #       ports:
  #         - 5001:5000

  #   env:
  #     TEST_TAG: localhost:5001/actions/container-action:latest

  #   steps:
  #     - name: Checkout
  #       id: checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Docker BuildX
  #       id: setup-buildx
  #       uses: docker/setup-buildx-action@v3
  #       with:
  #         install: true
  #         driver-opts: network=host

  #     - name: Build the Container
  #       id: build
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ env.TEST_TAG }}

  #     - name: Run the Container
  #       id: run
  #       env:
  #         INPUT_WHO_TO_GREET: Mona Lisa Octocat
  #         INPUT_ACCESS_TOKEN: ${{ secrets.BWS_ACCESS_TOKEN }}
  #         INPUT_SECRETS: |
  #           cdc0a886-6ad6-4136-bfd4-b04f01149173 > SECRET_ONE
  #         # 2b0da64f-f40d-434a-ad94-afdb01269ea9 > COMPARE_FILE
  #         INPUT_BASE_URL: "https://vault.bitwarden.com"
  #         INPUT_IDENTITY_URL: "https://identity.bitwarden.com"
  #         INPUT_API_URL: "https://api.bitwarden.com"
  #       run: |
  #         echo "GITHUB_ENV=$GITHUB_ENV"
  #         docker run \
  #           -v "$GITHUB_ENV":/github/env \
  #           --env INPUT_WHO_TO_GREET="${{ env.INPUT_WHO_TO_GREET }}" \
  #           --env INPUT_ACCESS_TOKEN="${{ env.INPUT_ACCESS_TOKEN }}" \
  #           --env INPUT_SECRETS="${{ env.INPUT_SECRETS }}" \
  #           --env INPUT_BASE_URL="${{ env.INPUT_BASE_URL }}" \
  #           --env INPUT_IDENTITY_URL="${{ env.INPUT_IDENTITY_URL }}" \
  #           --env INPUT_API_URL="${{ env.INPUT_API_URL }}" \
  #           --rm ${{ env.TEST_TAG }}

  #         echo "secret_one: ${{ env.SECRET_ONE }}"

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          access_token: ${{ secrets.BWS_ACCESS_TOKEN }}
          secrets: |
            cdc0a886-6ad6-4136-bfd4-b04f01149173 > SECRET_ONE
            2b0da64f-f40d-434a-ad94-afdb01269ea9 > COMPARE_FILE
            a668b804-781c-4864-8a49-b0500013b413 > GIGACHAD
            3865c716-4e4f-4d19-9be5-b2d1015fb57c > FERRIS
          cloud_region: us
          # base_url: "https://vault.bitwarden.com"
          # # identity_url: "https://identity.bitwarden.com"
          # # api_url: "https://api.bitwarden.com"

      - name: Print Output from Rust sm-action
        id: output
        run: |
          echo the following secrets should be masked:
          echo "SECRET_ONE=$SECRET_ONE"
          echo "COMPARE_FILE=$COMPARE_FILE"
          echo "GIGACHAD=$GIGACHAD"
          echo "FERRIS=$FERRIS"
          echo

          echo the following secrets should not be masked:
          echo "$SECRET_ONE" | sed 's/./& /g'
          echo "$COMPARE_FILE" | sed 's/./& /g'
          echo "$GIGACHAD" | sed 's/./& /g'
          echo "$FERRIS" | sed 's/./& /g'
          echo

      - name: Test existing sm-action
        id: sm-action
        uses: bitwarden/sm-action@v2.2.0
        with:
          access_token: ${{ secrets.BWS_ACCESS_TOKEN }}
          secrets: |
            cdc0a886-6ad6-4136-bfd4-b04f01149173 > SECRET_ONE
            2b0da64f-f40d-434a-ad94-afdb01269ea9 > COMPARE_FILE
            a668b804-781c-4864-8a49-b0500013b413 > GIGACHAD
            3865c716-4e4f-4d19-9be5-b2d1015fb57c > FERRIS
          cloud_region: us

      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1

      - name: Print Output from existing sm-action
        run: |
          echo the following two secrets should be masked:
          echo "SECRET_ONE=$SECRET_ONE"
          echo "COMPARE_FILE=$COMPARE_FILE"
          echo "GIGACHAD=$GIGACHAD"
          echo "FERRIS=$FERRIS"
          echo

          echo the following two secrets should not be masked:
          echo "$SECRET_ONE" | sed 's/./& /g'
          echo "$COMPARE_FILE" | sed 's/./& /g'
          echo "$GIGACHAD" | sed 's/./& /g'
          echo "$FERRIS" | sed 's/./& /g'
          echo
